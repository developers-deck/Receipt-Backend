import { OnModuleInit, OnModuleDestroy } from '@nestjs/common';
import { NewReceipt } from '../db/schema';
import { DbType } from '../db';
import { ConfigService } from '@nestjs/config';
export declare class ReceiptsService implements OnModuleInit, OnModuleDestroy {
    private db;
    private configService;
    private browser;
    private page;
    constructor(db: DbType, configService: ConfigService);
    onModuleInit(): Promise<void>;
    private initializeBrowser;
    onModuleDestroy(): Promise<void>;
    getAllReceipts(): Promise<{
        items: {
            id: number;
            createdAt: Date | null;
            receiptId: number;
            description: string | null;
            quantity: string | null;
            amount: string | null;
        }[];
        id: number;
        companyName: string | null;
        poBox: string | null;
        mobile: string | null;
        tin: string | null;
        vrn: string | null;
        serialNo: string | null;
        uin: string | null;
        taxOffice: string | null;
        customerName: string | null;
        customerIdType: string | null;
        customerId: string | null;
        customerMobile: string | null;
        receiptNo: string | null;
        zNumber: string | null;
        receiptDate: string | null;
        receiptTime: string | null;
        totalExclTax: string | null;
        totalTax: string | null;
        totalInclTax: string | null;
        verificationCode: string;
        verificationCodeUrl: string | null;
        createdAt: Date | null;
    }[]>;
    getReceipt(verificationCode: string, receiptTime: string): Promise<NewReceipt>;
    getReceiptById(id: number): Promise<{
        items: {
            id: number;
            createdAt: Date | null;
            receiptId: number;
            description: string | null;
            quantity: string | null;
            amount: string | null;
        }[];
        id: number;
        companyName: string | null;
        poBox: string | null;
        mobile: string | null;
        tin: string | null;
        vrn: string | null;
        serialNo: string | null;
        uin: string | null;
        taxOffice: string | null;
        customerName: string | null;
        customerIdType: string | null;
        customerId: string | null;
        customerMobile: string | null;
        receiptNo: string | null;
        zNumber: string | null;
        receiptDate: string | null;
        receiptTime: string | null;
        totalExclTax: string | null;
        totalTax: string | null;
        totalInclTax: string | null;
        verificationCode: string;
        verificationCodeUrl: string | null;
        createdAt: Date | null;
    } | null>;
    getReceiptsByCompanyName(companyName: string): Promise<{
        items: {
            id: number;
            createdAt: Date | null;
            receiptId: number;
            description: string | null;
            quantity: string | null;
            amount: string | null;
        }[];
        id: number;
        companyName: string | null;
        poBox: string | null;
        mobile: string | null;
        tin: string | null;
        vrn: string | null;
        serialNo: string | null;
        uin: string | null;
        taxOffice: string | null;
        customerName: string | null;
        customerIdType: string | null;
        customerId: string | null;
        customerMobile: string | null;
        receiptNo: string | null;
        zNumber: string | null;
        receiptDate: string | null;
        receiptTime: string | null;
        totalExclTax: string | null;
        totalTax: string | null;
        totalInclTax: string | null;
        verificationCode: string;
        verificationCodeUrl: string | null;
        createdAt: Date | null;
    }[]>;
}
